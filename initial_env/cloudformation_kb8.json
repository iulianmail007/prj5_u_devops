{
  "Resources": {
    "AWSAutoScalingAutoScalingGroupmasteruswest2amasterscluster2k8slocal": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AutoScalingGroupName": "master-us-west-2a.masters.cluster2.k8s.local",
        "LaunchConfigurationName": {
          "Ref": "AWSAutoScalingLaunchConfigurationmasteruswest2amasterscluster2k8slocal"
        },
        "MaxSize": 1,
        "MinSize": 1,
        "VPCZoneIdentifier": [
          {
            "Ref": "AWSEC2Subnetuswest2acluster2k8slocal"
          }
        ],
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "cluster2.k8s.local",
            "PropagateAtLaunch": true
          },
          {
            "Key": "Name",
            "Value": "master-us-west-2a.masters.cluster2.k8s.local",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/instancegroup",
            "Value": "master-us-west-2a",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/role/master",
            "Value": "1",
            "PropagateAtLaunch": true
          }
        ],
        "MetricsCollection": [
          {
            "Granularity": "1Minute",
            "Metrics": [
              "GroupDesiredCapacity",
              "GroupInServiceInstances",
              "GroupMaxSize",
              "GroupMinSize",
              "GroupPendingInstances",
              "GroupStandbyInstances",
              "GroupTerminatingInstances",
              "GroupTotalInstances"
            ]
          }
        ],
        "LoadBalancerNames": [
          {
            "Ref": "AWSElasticLoadBalancingLoadBalancerapicluster2k8slocal"
          }
        ]
      }
    },
    "AWSAutoScalingAutoScalingGroupnodescluster2k8slocal": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AutoScalingGroupName": "nodes.cluster2.k8s.local",
        "LaunchConfigurationName": {
          "Ref": "AWSAutoScalingLaunchConfigurationnodescluster2k8slocal"
        },
        "MaxSize": 3,
        "MinSize": 3,
        "VPCZoneIdentifier": [
          {
            "Ref": "AWSEC2Subnetuswest2acluster2k8slocal"
          }
        ],
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "cluster2.k8s.local",
            "PropagateAtLaunch": true
          },
          {
            "Key": "Name",
            "Value": "nodes.cluster2.k8s.local",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/cluster-autoscaler/node-template/label/kops.k8s.io/instancegroup",
            "Value": "nodes",
            "PropagateAtLaunch": true
          },
          {
            "Key": "k8s.io/role/node",
            "Value": "1",
            "PropagateAtLaunch": true
          }
        ],
        "MetricsCollection": [
          {
            "Granularity": "1Minute",
            "Metrics": [
              "GroupDesiredCapacity",
              "GroupInServiceInstances",
              "GroupMaxSize",
              "GroupMinSize",
              "GroupPendingInstances",
              "GroupStandbyInstances",
              "GroupTerminatingInstances",
              "GroupTotalInstances"
            ]
          }
        ]
      }
    },
    "AWSAutoScalingLaunchConfigurationmasteruswest2amasterscluster2k8slocal": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "AssociatePublicIpAddress": true,
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeType": "gp2",
              "VolumeSize": 64,
              "DeleteOnTermination": true
            }
          }
        ],
        "IamInstanceProfile": {
          "Ref": "AWSIAMInstanceProfilemasterscluster2k8slocal"
        },
        "ImageId": "ami-0f1ed9114ee01d145",
        "InstanceType": "t2.micro",
        "KeyName": "kubernetes.cluster2.k8s.local-fd:44:a0:ae:05:c4:c3:ed:7d:94:c7:48:09:1b:6f:c0",
        "SecurityGroups": [
          {
            "Ref": "AWSEC2SecurityGroupmasterscluster2k8slocal"
          }
        ],
        "InstanceMonitoring": false
      }
    },
    "AWSAutoScalingLaunchConfigurationnodescluster2k8slocal": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "AssociatePublicIpAddress": true,
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeType": "gp2",
              "VolumeSize": 128,
              "DeleteOnTermination": true
            }
          }
        ],
        "IamInstanceProfile": {
          "Ref": "AWSIAMInstanceProfilenodescluster2k8slocal"
        },
        "ImageId": "ami-0f1ed9114ee01d145",
        "InstanceType": "t2.micro",
        "KeyName": "kubernetes.cluster2.k8s.local-fd:44:a0:ae:05:c4:c3:ed:7d:94:c7:48:09:1b:6f:c0",
        "SecurityGroups": [
          {
            "Ref": "AWSEC2SecurityGroupnodescluster2k8slocal"
          }
        ],
        "InstanceMonitoring": false
      }
    },
    "AWSEC2DHCPOptionscluster2k8slocal": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainName": "us-west-2.compute.internal",
        "DomainNameServers": [
          "AmazonProvidedDNS"
        ],
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "cluster2.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "cluster2.k8s.local"
          },
          {
            "Key": "kubernetes.io/cluster/cluster2.k8s.local",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2InternetGatewaycluster2k8slocal": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "cluster2.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "cluster2.k8s.local"
          },
          {
            "Key": "kubernetes.io/cluster/cluster2.k8s.local",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2Route00000": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "AWSEC2RouteTablecluster2k8slocal"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "AWSEC2InternetGatewaycluster2k8slocal"
        }
      }
    },
    "AWSEC2RouteTablecluster2k8slocal": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCcluster2k8slocal"
        },
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "cluster2.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "cluster2.k8s.local"
          },
          {
            "Key": "kubernetes.io/cluster/cluster2.k8s.local",
            "Value": "owned"
          },
          {
            "Key": "kubernetes.io/kops/role",
            "Value": "public"
          }
        ]
      }
    },
    "AWSEC2SecurityGroupEgressapielbegress": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupapielbcluster2k8slocal"
        },
        "FromPort": 0,
        "ToPort": 0,
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "AWSEC2SecurityGroupEgressmasteregress": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmasterscluster2k8slocal"
        },
        "FromPort": 0,
        "ToPort": 0,
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "AWSEC2SecurityGroupEgressnodeegress": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupnodescluster2k8slocal"
        },
        "FromPort": 0,
        "ToPort": 0,
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "AWSEC2SecurityGroupIngressallmastertomaster": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmasterscluster2k8slocal"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupmasterscluster2k8slocal"
        },
        "FromPort": 0,
        "ToPort": 0,
        "IpProtocol": "-1"
      }
    },
    "AWSEC2SecurityGroupIngressallmastertonode": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupnodescluster2k8slocal"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupmasterscluster2k8slocal"
        },
        "FromPort": 0,
        "ToPort": 0,
        "IpProtocol": "-1"
      }
    },
    "AWSEC2SecurityGroupIngressallnodetonode": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupnodescluster2k8slocal"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupnodescluster2k8slocal"
        },
        "FromPort": 0,
        "ToPort": 0,
        "IpProtocol": "-1"
      }
    },
    "AWSEC2SecurityGroupIngresshttpsapielb00000": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupapielbcluster2k8slocal"
        },
        "FromPort": 443,
        "ToPort": 443,
        "IpProtocol": "tcp",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "AWSEC2SecurityGroupIngresshttpselbtomaster": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmasterscluster2k8slocal"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupapielbcluster2k8slocal"
        },
        "FromPort": 443,
        "ToPort": 443,
        "IpProtocol": "tcp"
      }
    },
    "AWSEC2SecurityGroupIngressicmppmtuapielb00000": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupapielbcluster2k8slocal"
        },
        "FromPort": 3,
        "ToPort": 4,
        "IpProtocol": "icmp",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "AWSEC2SecurityGroupIngressnodetomastertcp12379": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmasterscluster2k8slocal"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupnodescluster2k8slocal"
        },
        "FromPort": 1,
        "ToPort": 2379,
        "IpProtocol": "tcp"
      }
    },
    "AWSEC2SecurityGroupIngressnodetomastertcp23824000": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmasterscluster2k8slocal"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupnodescluster2k8slocal"
        },
        "FromPort": 2382,
        "ToPort": 4000,
        "IpProtocol": "tcp"
      }
    },
    "AWSEC2SecurityGroupIngressnodetomastertcp400365535": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmasterscluster2k8slocal"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupnodescluster2k8slocal"
        },
        "FromPort": 4003,
        "ToPort": 65535,
        "IpProtocol": "tcp"
      }
    },
    "AWSEC2SecurityGroupIngressnodetomasterudp165535": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmasterscluster2k8slocal"
        },
        "SourceSecurityGroupId": {
          "Ref": "AWSEC2SecurityGroupnodescluster2k8slocal"
        },
        "FromPort": 1,
        "ToPort": 65535,
        "IpProtocol": "udp"
      }
    },
    "AWSEC2SecurityGroupIngresssshexternaltomaster00000": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupmasterscluster2k8slocal"
        },
        "FromPort": 22,
        "ToPort": 22,
        "IpProtocol": "tcp",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "AWSEC2SecurityGroupIngresssshexternaltonode00000": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "AWSEC2SecurityGroupnodescluster2k8slocal"
        },
        "FromPort": 22,
        "ToPort": 22,
        "IpProtocol": "tcp",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "AWSEC2SecurityGroupapielbcluster2k8slocal": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCcluster2k8slocal"
        },
        "GroupDescription": "Security group for api ELB",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "cluster2.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "api-elb.cluster2.k8s.local"
          },
          {
            "Key": "kubernetes.io/cluster/cluster2.k8s.local",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2SecurityGroupmasterscluster2k8slocal": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCcluster2k8slocal"
        },
        "GroupDescription": "Security group for masters",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "cluster2.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "masters.cluster2.k8s.local"
          },
          {
            "Key": "kubernetes.io/cluster/cluster2.k8s.local",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2SecurityGroupnodescluster2k8slocal": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCcluster2k8slocal"
        },
        "GroupDescription": "Security group for nodes",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "cluster2.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "nodes.cluster2.k8s.local"
          },
          {
            "Key": "kubernetes.io/cluster/cluster2.k8s.local",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2SubnetRouteTableAssociationuswest2acluster2k8slocal": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "AWSEC2Subnetuswest2acluster2k8slocal"
        },
        "RouteTableId": {
          "Ref": "AWSEC2RouteTablecluster2k8slocal"
        }
      }
    },
    "AWSEC2Subnetuswest2acluster2k8slocal": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCcluster2k8slocal"
        },
        "CidrBlock": "172.20.32.0/19",
        "AvailabilityZone": "us-west-2a",
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "cluster2.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "us-west-2a.cluster2.k8s.local"
          },
          {
            "Key": "SubnetType",
            "Value": "Public"
          },
          {
            "Key": "kubernetes.io/cluster/cluster2.k8s.local",
            "Value": "owned"
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          }
        ]
      }
    },
    "AWSEC2VPCDHCPOptionsAssociationcluster2k8slocal": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCcluster2k8slocal"
        },
        "DhcpOptionsId": {
          "Ref": "AWSEC2DHCPOptionscluster2k8slocal"
        }
      }
    },
    "AWSEC2VPCGatewayAttachmentcluster2k8slocal": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "AWSEC2VPCcluster2k8slocal"
        },
        "InternetGatewayId": {
          "Ref": "AWSEC2InternetGatewaycluster2k8slocal"
        }
      }
    },
    "AWSEC2VPCcluster2k8slocal": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "172.20.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "cluster2.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "cluster2.k8s.local"
          },
          {
            "Key": "kubernetes.io/cluster/cluster2.k8s.local",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2Volumeaetcdeventscluster2k8slocal": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-west-2a",
        "Size": 20,
        "VolumeType": "gp2",
        "Encrypted": false,
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "cluster2.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "a.etcd-events.cluster2.k8s.local"
          },
          {
            "Key": "k8s.io/etcd/events",
            "Value": "a/a"
          },
          {
            "Key": "k8s.io/role/master",
            "Value": "1"
          },
          {
            "Key": "kubernetes.io/cluster/cluster2.k8s.local",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSEC2Volumeaetcdmaincluster2k8slocal": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "AvailabilityZone": "us-west-2a",
        "Size": 20,
        "VolumeType": "gp2",
        "Encrypted": false,
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "cluster2.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "a.etcd-main.cluster2.k8s.local"
          },
          {
            "Key": "k8s.io/etcd/main",
            "Value": "a/a"
          },
          {
            "Key": "k8s.io/role/master",
            "Value": "1"
          },
          {
            "Key": "kubernetes.io/cluster/cluster2.k8s.local",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSElasticLoadBalancingLoadBalancerapicluster2k8slocal": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "LoadBalancerName": "api-cluster2-k8s-local-rdprcq",
        "Listeners": [
          {
            "InstancePort": 443,
            "InstanceProtocol": "TCP",
            "LoadBalancerPort": 443,
            "Protocol": "TCP"
          }
        ],
        "SecurityGroups": [
          {
            "Ref": "AWSEC2SecurityGroupapielbcluster2k8slocal"
          }
        ],
        "Subnets": [
          {
            "Ref": "AWSEC2Subnetuswest2acluster2k8slocal"
          }
        ],
        "HealthCheck": {
          "Target": "SSL:443",
          "HealthyThreshold": 2,
          "UnhealthyThreshold": 2,
          "Interval": 10,
          "Timeout": 5
        },
        "ConnectionSettings": {
          "IdleTimeout": 300
        },
        "Tags": [
          {
            "Key": "KubernetesCluster",
            "Value": "cluster2.k8s.local"
          },
          {
            "Key": "Name",
            "Value": "api.cluster2.k8s.local"
          },
          {
            "Key": "kubernetes.io/cluster/cluster2.k8s.local",
            "Value": "owned"
          }
        ]
      }
    },
    "AWSIAMInstanceProfilemasterscluster2k8slocal": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "AWSIAMRolemasterscluster2k8slocal"
          }
        ]
      }
    },
    "AWSIAMInstanceProfilenodescluster2k8slocal": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "AWSIAMRolenodescluster2k8slocal"
          }
        ]
      }
    },
    "AWSIAMPolicymasterscluster2k8slocal": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "masters.cluster2.k8s.local",
        "Roles": [
          {
            "Ref": "AWSIAMRolemasterscluster2k8slocal"
          }
        ],
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2:DescribeInstances",
                "ec2:DescribeRegions",
                "ec2:DescribeRouteTables",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeVolumes"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "ec2:CreateSecurityGroup",
                "ec2:CreateTags",
                "ec2:CreateVolume",
                "ec2:DescribeVolumesModifications",
                "ec2:ModifyInstanceAttribute",
                "ec2:ModifyVolume"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "ec2:AttachVolume",
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:CreateRoute",
                "ec2:DeleteRoute",
                "ec2:DeleteSecurityGroup",
                "ec2:DeleteVolume",
                "ec2:DetachVolume",
                "ec2:RevokeSecurityGroupIngress"
              ],
              "Condition": {
                "StringEquals": {
                  "ec2:ResourceTag/KubernetesCluster": "cluster2.k8s.local"
                }
              },
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "autoscaling:DescribeAutoScalingGroups",
                "autoscaling:DescribeLaunchConfigurations",
                "autoscaling:DescribeTags",
                "ec2:DescribeLaunchTemplateVersions"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "autoscaling:SetDesiredCapacity",
                "autoscaling:TerminateInstanceInAutoScalingGroup",
                "autoscaling:UpdateAutoScalingGroup"
              ],
              "Condition": {
                "StringEquals": {
                  "autoscaling:ResourceTag/KubernetesCluster": "cluster2.k8s.local"
                }
              },
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "elasticloadbalancing:AddTags",
                "elasticloadbalancing:AttachLoadBalancerToSubnets",
                "elasticloadbalancing:ApplySecurityGroupsToLoadBalancer",
                "elasticloadbalancing:CreateLoadBalancer",
                "elasticloadbalancing:CreateLoadBalancerPolicy",
                "elasticloadbalancing:CreateLoadBalancerListeners",
                "elasticloadbalancing:ConfigureHealthCheck",
                "elasticloadbalancing:DeleteLoadBalancer",
                "elasticloadbalancing:DeleteLoadBalancerListeners",
                "elasticloadbalancing:DescribeLoadBalancers",
                "elasticloadbalancing:DescribeLoadBalancerAttributes",
                "elasticloadbalancing:DetachLoadBalancerFromSubnets",
                "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                "elasticloadbalancing:ModifyLoadBalancerAttributes",
                "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                "elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "ec2:DescribeVpcs",
                "elasticloadbalancing:AddTags",
                "elasticloadbalancing:CreateListener",
                "elasticloadbalancing:CreateTargetGroup",
                "elasticloadbalancing:DeleteListener",
                "elasticloadbalancing:DeleteTargetGroup",
                "elasticloadbalancing:DeregisterTargets",
                "elasticloadbalancing:DescribeListeners",
                "elasticloadbalancing:DescribeLoadBalancerPolicies",
                "elasticloadbalancing:DescribeTargetGroups",
                "elasticloadbalancing:DescribeTargetHealth",
                "elasticloadbalancing:ModifyListener",
                "elasticloadbalancing:ModifyTargetGroup",
                "elasticloadbalancing:RegisterTargets",
                "elasticloadbalancing:SetLoadBalancerPoliciesOfListener"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "iam:ListServerCertificates",
                "iam:GetServerCertificate"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "s3:GetBucketLocation",
                "s3:GetEncryptionConfiguration",
                "s3:ListBucket"
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:s3:::cluster1.k8s.prj5"
              ]
            },
            {
              "Action": [
                "s3:Get*"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::cluster1.k8s.prj5/cluster2.k8s.local/*"
            },
            {
              "Action": [
                "s3:GetObject",
                "s3:DeleteObject",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::cluster1.k8s.prj5/cluster2.k8s.local/backups/etcd/main/*"
            },
            {
              "Action": [
                "s3:GetObject",
                "s3:DeleteObject",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::cluster1.k8s.prj5/cluster2.k8s.local/backups/etcd/events/*"
            },
            {
              "Action": [
                "ecr:GetAuthorizationToken",
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:GetRepositoryPolicy",
                "ecr:DescribeRepositories",
                "ecr:ListImages",
                "ecr:BatchGetImage"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "AWSIAMPolicynodescluster2k8slocal": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "nodes.cluster2.k8s.local",
        "Roles": [
          {
            "Ref": "AWSIAMRolenodescluster2k8slocal"
          }
        ],
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2:DescribeInstances",
                "ec2:DescribeRegions"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "s3:GetBucketLocation",
                "s3:GetEncryptionConfiguration",
                "s3:ListBucket"
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:s3:::cluster1.k8s.prj5"
              ]
            },
            {
              "Action": [
                "s3:Get*"
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:s3:::cluster1.k8s.prj5/cluster2.k8s.local/addons/*",
                "arn:aws:s3:::cluster1.k8s.prj5/cluster2.k8s.local/cluster.spec",
                "arn:aws:s3:::cluster1.k8s.prj5/cluster2.k8s.local/config",
                "arn:aws:s3:::cluster1.k8s.prj5/cluster2.k8s.local/instancegroup/*",
                "arn:aws:s3:::cluster1.k8s.prj5/cluster2.k8s.local/pki/issued/*",
                "arn:aws:s3:::cluster1.k8s.prj5/cluster2.k8s.local/pki/private/kube-proxy/*",
                "arn:aws:s3:::cluster1.k8s.prj5/cluster2.k8s.local/pki/private/kubelet/*",
                "arn:aws:s3:::cluster1.k8s.prj5/cluster2.k8s.local/pki/ssh/*",
                "arn:aws:s3:::cluster1.k8s.prj5/cluster2.k8s.local/secrets/dockerconfig"
              ]
            },
            {
              "Action": [
                "ecr:GetAuthorizationToken",
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:GetRepositoryPolicy",
                "ecr:DescribeRepositories",
                "ecr:ListImages",
                "ecr:BatchGetImage"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "AWSIAMRolemasterscluster2k8slocal": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "masters.cluster2.k8s.local",
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "AWSIAMRolenodescluster2k8slocal": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "nodes.cluster2.k8s.local",
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    }
  }
}